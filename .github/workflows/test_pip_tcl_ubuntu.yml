name: Python Package using pip

on:
  push:
    branches:
      - main
      - devel

defaults:
  run:
    shell: bash
jobs:
  job:
    name: pip tcl ubuntu
    runs-on: ubuntu-latest
    env:
      compiler: 'gcc'
      symbols: 'no'
      disables: ''

    steps:
    - name: Clone AlloViz
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10.6"
        cache: "pip"
        cache-dependency-path: dev/dev_env.txt


    # TCL IN UBUNTU
    - name: Checkout Tk
      uses: actions/checkout@v3
      with:
        repository: tcltk/tk
        ref: core-8-5-branch
        path: tk
    - name: Checkout Tcl
      uses: actions/checkout@v3
      with:
        repository: tcltk/tcl
        ref: core-8-5-branch
        path: tcl
    - name: Setup Environment (compiler=gcc)
      run: |
        sudo apt-get install tcl8.6-dev libxss-dev
        mkdir "$HOME/install"
        touch tk/doc/man.macros tk/generic/tkStubInit.c
        echo "CFGOPT=$CFGOPT --with-tcl=/usr/lib/tcl8.6" >> $GITHUB_ENV
        echo "CC=gcc" >> $GITHUB_ENV
        echo "TOOL_DIR=$(cd tcl/tools;pwd)" >> $GITHUB_ENV
        echo "BUILD_CONFIG_ID=$OPTS" >> $GITHUB_ENV
      working-directory: "."
      env:
        CFGOPT: --enable-symbols=no
        # $disables
        COMPILER: gcc
        OPTS: gcc-no
    - name: Configure (symbols=no) 
      # opts=$disables)
      run: |
        ./configure $CFGOPT "--prefix=$HOME/install" || {
          cat config.log
          echo "::error::Failure during Configure"
          exit 1
        }
      working-directory: tk/unix
    - name: Build
      run: |
        make binaries libraries || {
          echo "::error::Failure during Build"
          exit 1
        }
      working-directory: tk/unix
    - name: Build Test Harness
      run: |
        make tktest || {
          echo "::error::Failure during Build"
          exit 1
        }
      working-directory: tk/unix
    - name: Test-Drive Installation
      run: |
        make install || {
          echo "::error::Failure during Install"
          exit 1
        }
      working-directory: tk/unix





    # - name: Cache pip deps
    #   uses: actions/cache@v3
    #   with:
    #     path: ${{ env.pythonLocation }}
    #     key:
    #       ${{ env.pythonLocation }}-pip-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('dev/dev_env.txt') }}-${{ env.CACHE_NUMBER }}
    #   env:
    #     # Increase this value to reset cache if has not changed
    #     CACHE_NUMBER: 0
    #   id: cache

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libnetcdf-dev
        python -m pip install -U --upgrade-strategy eager pip
        pip install -U --upgrade-strategy eager setuptools "numpy>=1.22.4,<1.22.5" wheel
        pip install -r dev/dev_env.txt
      # if: steps.cache.outputs.cache-hit != 'true'


    - name: Install AlloViz
      run: pip install .


    - name: Test with pytest
      run: pytest test