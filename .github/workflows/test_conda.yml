name: Python Package using Conda

on:
  push:
    branches:
      - main

jobs:
  miniconda:
    name: Miniconda ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: ["ubuntu", "macos"]
        experimental: [false]
        # include:
        #   - os: "windows"
        #     experimental: true
    defaults:
      run:
        shell: bash -el {0}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive


    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: anaconda-client-env
        use-mamba: true

    - name: Process environment file
      run: python dev/cme_parser/create_env.py -i dev/dev_env.yml.meta -o dev/dev_env_out.yml -p -v so ${{ matrix.os }}

    - name: Cache Conda env
      uses: actions/cache@v3
      with:
        path: ${{ env.CONDA }}/envs
        key:
          conda-${{ runner.os }}--${{ runner.arch }}-${{ hashFiles('dev/dev_env_out.yml') }}-${{ env.CACHE_NUMBER }}
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      id: cache

    - name: Update environment
      run: mamba env update -n anaconda-client-env -f dev/dev_env_out.yml
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Install AlloViz
      run: pip install .

    - name: Test with pytest
      run: pytest test